@use "variables";
@use "../../stylesheets/breakpoint";

/*
 * 'OR' mediaqueries.
 * tests separated by commas
 * $basic-or : #{variables.$basic-or};
 * $basic-or-media : #{variables.$basic-or-media};
 */
.basic-or {
    @include breakpoint.breakpoint(variables.$basic-or) {
        content: "$basic-or";
        content: "@media (max-width: 350px), (min-width: 500px) and (max-width: 600px)";
    }
    @include breakpoint.respond-to("basic or") {
        content: "$basic-or";
        content: "@media (max-width: 350px), (min-width: 500px) and (max-width: 600px)";
    }
}
.basic-or-media {
    @include breakpoint.breakpoint(variables.$basic-or-media) {
        content: "$basic-or";
        content: "@media (min-width: 500px), tv and (min-width: 700px) and (color)";
    }
    @include breakpoint.mq(variables.$basic-or) {
        content: "$basic-or";
        content: "@media (min-width: 500px), tv and (min-width: 700px) and (color)";
    }
    @include breakpoint.respond-to("basic or") {
        content: "$basic-or";
        content: "@media (min-width: 500px), tv and (min-width: 700px) and (color)";
    }
}
/* @include breakpoint-set('to ems', true); */
@include breakpoint.breakpoint-set("to ems", true);
.basic-or-to-ems {
    @include breakpoint.breakpoint(variables.$basic-or) {
        content: "$basic-or";
        content: "@media (min-width: 31.25em), tv and (min-width: 43.75em) and (color)";
    }
    @include breakpoint.mq(variables.$basic-or) {
        content: "$basic-or";
        content: "@media (min-width: 31.25em), tv and (min-width: 43.75em) and (color)";
    }
}
